namespace MatrixMult
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Info on matrix 1");
            Console.WriteLine("Enter number of rows: ");
            int row1 = int.Parse(Console.ReadLine());
            Console.WriteLine("Enter number of columns : ");
            int col1 = int.Parse(Console.ReadLine());
            Console.WriteLine("Enter values os matrix ");
            int[,] mat1 = new int[row1, col1];
            for (int i = 0; i < row1; i++)
            {
                for (int j = 0; j < col1; j++)
                {
                    mat1[i , j] = int.Parse(Console.ReadLine()); ;
                }
            }

            //Matrix 1
            Console.WriteLine("Matrix 1 ");
            for (int i = 0; i < row1; i++)
            {
                for (int j = 0; j < col1; j++)
                {
                    Console.Write(string.Format("{0} ", mat1[i, j]));
                }
                Console.Write(Environment.NewLine + Environment.NewLine);
            }

            //Console.WriteLine("Info on matrix 2");
            //Console.WriteLine("Enter number of rows: ");
            //int row2 = int.Parse(Console.ReadLine());
            //Console.WriteLine("Enter number of columns : ");
            //int col2 = int.Parse(Console.ReadLine());
            //Console.WriteLine("Enter values os matrix ");
            //int[,] mat2 = new int[row2, col2];
            //for (int i = 0; i < row2; i++)
            //{
            //    for (int j = 0; j < col2; j++)
            //    {
            //        mat2[i, j] = int.Parse(Console.ReadLine()); ;
            //    }
            //}

            //Matrix 2
            //Console.WriteLine("Matrix 2 ");
            //for (int i = 0; i < row2; i++)
            //{
            //    for (int j = 0; j < col2; j++)
            //    {
            //        Console.WriteLine(mat2[i, j]);
            //    }
            //    Console.WriteLine();
            //}

            //Q 1. Matrix Multiplication 
            /*
            int[,] multipliedMat = new int[row1, col2];

            for (int i = 0; i < row1; i++)
            {
                for (int j = 0; j < col2; j++)
                {
                    for (int k = 0; k < row2; k++)
                    {
                        multipliedMat[i,j] = multipliedMat[i, j] + (mat1[i, k] * mat2[k, j]);
                    }
                }
            }

            Console.WriteLine("Multiplied Matrix  ");
            for (int i = 0; i < row1; i++)
            {
                for (int j = 0; j < col2; j++)
                {
                    Console.WriteLine(multipliedMat[i, j]);
                }
                Console.WriteLine();
            }
            */

            //Q 2. Largest number in the matrix
            //Console.WriteLine("Finding largest number in the matrix :");
            //int max = 0;
            //for (int i = 0; i < row1; i++)
            //{
            //    for (int j = 0; j < col1; j++)
            //    {
            //        if (mat1[i,j] > max)
            //        {
            //            max = mat1[i, j];
            //        }
            //    }
            //}
            //Console.WriteLine("sabse bada kon ???? >>>>>" + max);


            //Q 3. Find the sum of corner elements of amatrix
            //Console.WriteLine(" Sum of corner elements of Matrix 1 :-  ");
            //int cornerSum = 0;
            //cornerSum += mat1[0,0] + mat1[0,row1-1] + mat1[col1-1,0] + mat1[row1-1,col1-1];

            //Console.WriteLine("Sum of corners: " + cornerSum);


            //Q 4. Find the difference of diagonals 
            Console.WriteLine(" Difference of diagonals of Matrix 1 :-  ");
            
            int val1 = 0;
            int val2 = 0;
            int j2 = 0;
            for (int i = 0; i < row1; i++)
            {
                if (i == j2)
                {
                    val1 += mat1[i, j2];
                    j2++;
                }
            }
            int j1 = col1 - 1;
            for (int i = 0; i < row1; i++)
            {
                val2 += mat1[i, j1];
                j1--;
            }
            int diagonalDiff = val1-val2;
            Console.WriteLine("Difference of diagonals: " + diagonalDiff);
        }
    }    
}
